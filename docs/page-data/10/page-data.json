{"componentChunkName":"component---src-templates-blog-post-js","path":"/10/","result":{"data":{"site":{"siteMetadata":{"title":"アーカイブ"}},"markdownRemark":{"id":"dfac8bad-9092-566d-afb6-49cbc238af7e","excerpt":"概要 　解説...といってもところどころ掻い摘んでどんな風に実装したかを軽く説明するだけです。 はじめに 　web…","html":"<h2>概要</h2>\n<p>　解説...といってもところどころ掻い摘んでどんな風に実装したかを軽く説明するだけです。</p>\n<h2>はじめに</h2>\n<p>　webサービスを設計したことがなかったため全体的な設計はかなり緩いです。付焼刃的な実装もそこそこ多いので、これから勉強します。</p>\n<h2>リアルタイムに残り人数を表示</h2>\n<p>　今回はコースを選択するとコース別の残り人数が表示されるようにしていました。</p>\n<p>スライムを選択するとスライムの残り人数が、\n<img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1889756/ca426264-899f-2d8e-702b-3177344eb0c3.jpeg\" alt=\"01.jpg\"></p>\n<p>DNAストラップを選択するとDNAストラップの残り人数が、\n<img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1889756/80eb4e22-970b-9c25-f779-d82b4148a2bc.jpeg\" alt=\"02.jpg\"></p>\n<p>といった感じです。</p>\n<p>この部分は <code class=\"language-text\">useEffect()</code> の第2引数の配列にコース名を渡して、コース名が変更されたら再度人数を取得・表示するようにしていました。</p>\n<p><code class=\"language-text\">useEffect()</code> の基本構文が以下の通りなので、</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 第1引数に実行させたい副作用関数を記述</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"副作用関数を呼び出し\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token comment\">/*依存する変数の配列*/</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 第2引数に副作用関数の実行タイミングを制御する依存データを記述</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/* 一部省略 */</span>\n<span class=\"token keyword\">const</span> initialTitles<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">\"スライム\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"DNAストラップ\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"くるくるマグネット\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"ふしぎな水そう\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"球体ロボットでプログラミング体験\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"電卓を分解して自分だけのアクセサリーを作ろう\"</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 選択中のコース名, 残り人数</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>courseTitle<span class=\"token punctuation\">,</span> setTitle<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>initialTitles<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>capacities<span class=\"token punctuation\">,</span> setCapacities<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 残り人数を取得</span>\n      <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getCapacities</span><span class=\"token punctuation\">(</span>courseTitle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">setCapacities</span><span class=\"token punctuation\">(</span>result<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>courseTitle<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// コース名が変更されたら更新</span></code></pre></div>\n<p>若干雑な設計ではありますが、こんな感じで実装していました。</p>\n<h2>ページの公開状況</h2>\n<p>　今回は事前予約と当日予約を切り替えるために、一時的にフォームをクローズする必要がありました(現在は以下のようになっています)。\n<img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1889756/47972ee5-795a-57fc-547e-d3c8d57a5b4d.jpeg\" alt=\"03.jpg\"></p>\n<p>これに関しては全く自信がないのでもっと適した切り替え方法があったのかもしれませんが、今回は以下のように実装していました。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// ページのステータス</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">FormStatus</span> <span class=\"token operator\">=</span> <span class=\"token string\">'closed'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'accepting'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'succeeded'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'failed'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ステータスを格納</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>formStatus<span class=\"token punctuation\">,</span> setStatus<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>FormStatus<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'closed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* ステータスに合わせてページを切り替え */</span></code></pre></div>\n<p>これは...これでいいのか...と自分でも感じています。勉強します。</p>\n<h2>集計</h2>\n<p>　Firebaseはいろんな言語に対応するライブラリがあるので集計は楽でした。速度は遅いですが手軽なので今回はPythonで集計していました。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> openpyxl\n<span class=\"token keyword\">import</span> datetime\n<span class=\"token keyword\">import</span> collections\n<span class=\"token keyword\">import</span> firebase_admin\n<span class=\"token keyword\">from</span> firebase_admin <span class=\"token keyword\">import</span> firestore\n<span class=\"token keyword\">from</span> firebase_admin <span class=\"token keyword\">import</span> credentials\n<span class=\"token keyword\">from</span> openpyxl<span class=\"token punctuation\">.</span>styles <span class=\"token keyword\">import</span> Font<span class=\"token punctuation\">,</span> PatternFill\n<span class=\"token keyword\">from</span> openpyxl<span class=\"token punctuation\">.</span>styles<span class=\"token punctuation\">.</span>borders <span class=\"token keyword\">import</span> Border<span class=\"token punctuation\">,</span> Side\n\n\ncred <span class=\"token operator\">=</span> credentials<span class=\"token punctuation\">.</span>Certificate<span class=\"token punctuation\">(</span><span class=\"token string\">'py/credentials.json'</span><span class=\"token punctuation\">)</span>\nfirebase_admin<span class=\"token punctuation\">.</span>initialize_app<span class=\"token punctuation\">(</span>cred<span class=\"token punctuation\">)</span>\ndb <span class=\"token operator\">=</span> firestore<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">fetch_ref</span><span class=\"token punctuation\">(</span>collection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> db<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">(</span>collection<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    date <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'{0:%Y/%m/%d %H:%M更新}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'時間'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'名前'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'学年'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'メールアドレス'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'備考'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'受付完了時刻'</span><span class=\"token punctuation\">]</span>\n    titles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'スライム'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DNAストラップ'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'くるくるマグネット'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ふしぎな水そう'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'球体ロボットでプログラミング体験'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'電卓を分解して自分だけのアクセサリーを作ろう'</span><span class=\"token punctuation\">]</span>\n    keyOrder <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'schedule'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'grade'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'memo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'submitted_at'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># collectionの取得</span>\n    adv_ref <span class=\"token operator\">=</span> fetch_ref<span class=\"token punctuation\">(</span><span class=\"token string\">'adv-applicants'</span><span class=\"token punctuation\">)</span>\n    door_ref <span class=\"token operator\">=</span> fetch_ref<span class=\"token punctuation\">(</span><span class=\"token string\">'door-applicants'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># フォント・罫線・カラー</span>\n    font <span class=\"token operator\">=</span> Font<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'游ゴシック'</span><span class=\"token punctuation\">)</span>\n    thin <span class=\"token operator\">=</span> Side<span class=\"token punctuation\">(</span>style<span class=\"token operator\">=</span><span class=\"token string\">'thin'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'000000'</span><span class=\"token punctuation\">)</span>\n    dashed <span class=\"token operator\">=</span> Side<span class=\"token punctuation\">(</span>style<span class=\"token operator\">=</span><span class=\"token string\">'dashed'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'000000'</span><span class=\"token punctuation\">)</span>\n    fill <span class=\"token operator\">=</span> PatternFill<span class=\"token punctuation\">(</span>patternType<span class=\"token operator\">=</span><span class=\"token string\">'solid'</span><span class=\"token punctuation\">,</span> fgColor<span class=\"token operator\">=</span><span class=\"token string\">'ebf1de'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Excelファイルの初期化</span>\n    wb <span class=\"token operator\">=</span> openpyxl<span class=\"token punctuation\">.</span>Workbook<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># データの書き込み</span>\n    <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> title <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>titles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># シートの追加</span>\n        wb<span class=\"token punctuation\">.</span>create_sheet<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span>index<span class=\"token punctuation\">,</span> title<span class=\"token operator\">=</span>title<span class=\"token punctuation\">)</span>\n        ws <span class=\"token operator\">=</span> wb<span class=\"token punctuation\">[</span>title<span class=\"token punctuation\">]</span>\n\n        <span class=\"token comment\"># ヘッダーの書き込み</span>\n        <span class=\"token keyword\">for</span> col<span class=\"token punctuation\">,</span> header <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            cell <span class=\"token operator\">=</span> ws<span class=\"token punctuation\">.</span>cell<span class=\"token punctuation\">(</span>row<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> column<span class=\"token operator\">=</span>col<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span>header<span class=\"token punctuation\">)</span>\n            cell<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> font\n            cell<span class=\"token punctuation\">.</span>fill <span class=\"token operator\">=</span> fill\n            cell<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> Border<span class=\"token punctuation\">(</span>top<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> bottom<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> left<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> right<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># DBにアクセス</span>\n        adv_docs <span class=\"token operator\">=</span> adv_ref<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        door_docs <span class=\"token operator\">=</span> door_ref<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># データを結合</span>\n        docs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">for</span> schedule <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>adv_docs<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> door_docs<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            adv <span class=\"token operator\">=</span> adv_docs<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>schedule<span class=\"token punctuation\">)</span>\n            door <span class=\"token operator\">=</span> door_docs<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>schedule<span class=\"token punctuation\">)</span>\n            \n            docs<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span>schedule<span class=\"token punctuation\">,</span> adv <span class=\"token operator\">+</span> door<span class=\"token punctuation\">)</span>\n        ordered_docs <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>OrderedDict<span class=\"token punctuation\">(</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>docs<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        \n        row <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n        title_written <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>        \n        <span class=\"token keyword\">for</span> schedule<span class=\"token punctuation\">,</span> users <span class=\"token keyword\">in</span> ordered_docs<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> users<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n\n            schedule_written <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n            <span class=\"token keyword\">for</span> user <span class=\"token keyword\">in</span> users<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> title_written<span class=\"token punctuation\">:</span>\n                    title <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    title_written <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n                <span class=\"token keyword\">if</span> schedule_written<span class=\"token punctuation\">:</span>\n                    schedule <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    schedule_written <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n                \n                user<span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'schedule'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> title<span class=\"token punctuation\">,</span> schedule\n                <span class=\"token keyword\">for</span> col<span class=\"token punctuation\">,</span> key <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>keyOrder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    border <span class=\"token operator\">=</span> Border<span class=\"token punctuation\">(</span>top<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> bottom<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> left<span class=\"token operator\">=</span>dashed<span class=\"token punctuation\">,</span> right<span class=\"token operator\">=</span>dashed<span class=\"token punctuation\">)</span>\n\n                    <span class=\"token keyword\">if</span> key <span class=\"token operator\">==</span> <span class=\"token string\">'title'</span> <span class=\"token keyword\">or</span> key <span class=\"token operator\">==</span> <span class=\"token string\">'schedule'</span><span class=\"token punctuation\">:</span>\n                        border <span class=\"token operator\">=</span> Border<span class=\"token punctuation\">(</span>left<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> right<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">elif</span> key <span class=\"token operator\">==</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span>\n                        border <span class=\"token operator\">=</span> Border<span class=\"token punctuation\">(</span>top<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> bottom<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> left<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> right<span class=\"token operator\">=</span>dashed<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">elif</span> key <span class=\"token operator\">==</span> <span class=\"token string\">'submitted_at'</span><span class=\"token punctuation\">:</span>\n                        submitted_at <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>fromtimestamp<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        user<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'{0:%Y-%m-%d %H:%M}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>submitted_at<span class=\"token punctuation\">)</span>\n                        border <span class=\"token operator\">=</span> Border<span class=\"token punctuation\">(</span>top<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> bottom<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> left<span class=\"token operator\">=</span>dashed<span class=\"token punctuation\">,</span> right<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">)</span>\n\n                    cell <span class=\"token operator\">=</span> ws<span class=\"token punctuation\">.</span>cell<span class=\"token punctuation\">(</span>row<span class=\"token operator\">=</span>row<span class=\"token punctuation\">,</span> column<span class=\"token operator\">=</span>col<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span>user<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                    cell<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> font\n                    cell<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> border\n                \n                row <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            \n            ws<span class=\"token punctuation\">.</span>cell<span class=\"token punctuation\">(</span>row<span class=\"token operator\">=</span>row<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> column<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> Border<span class=\"token punctuation\">(</span>bottom<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> left<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> right<span class=\"token operator\">=</span>dashed<span class=\"token punctuation\">)</span>\n\n        ws<span class=\"token punctuation\">.</span>cell<span class=\"token punctuation\">(</span>row<span class=\"token operator\">=</span>row<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> column<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> Border<span class=\"token punctuation\">(</span>bottom<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> left<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">,</span> right<span class=\"token operator\">=</span>thin<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 保存</span>\n    wb<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">'py/applicants/最終申込者リスト.xlsx'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>先方に共有する際にExcelが1番楽だったのでExcelに落とし込んでいました。</p>\n<h2>事前予約枠を当日予約枠に引き継ぐ</h2>\n<p>　事前予約で埋まらなかった枠を当日予約に引き継ぐ日通用があったため、対応するスクリプトを用意しました。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> collections\n<span class=\"token keyword\">import</span> firebase_admin\n<span class=\"token keyword\">from</span> firebase_admin <span class=\"token keyword\">import</span> firestore\n<span class=\"token keyword\">from</span> firebase_admin <span class=\"token keyword\">import</span> credentials\n\ncred <span class=\"token operator\">=</span> credentials<span class=\"token punctuation\">.</span>Certificate<span class=\"token punctuation\">(</span><span class=\"token string\">'py/credentials.json'</span><span class=\"token punctuation\">)</span>\nfirebase_admin<span class=\"token punctuation\">.</span>initialize_app<span class=\"token punctuation\">(</span>cred<span class=\"token punctuation\">)</span>\ndb <span class=\"token operator\">=</span> firestore<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># collectionの取得</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">fetch_ref</span><span class=\"token punctuation\">(</span>collection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> db<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">(</span>collection<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 事前予約者の空いた枠を当日予約に引き継ぐ</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">merge_applicants</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    titles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'スライム'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DNAストラップ'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'くるくるマグネット'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ふしぎな水そう'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'球体ロボットでプログラミング体験'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'電卓を分解して自分だけのアクセサリーを作ろう'</span><span class=\"token punctuation\">]</span>\n    schedules <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'10:30'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'11:00'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'11:30'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'12:00'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'12:30'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'13:00'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'13:30'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'14:00'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'14:30'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'15:00'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'15:30'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'16:00'</span><span class=\"token punctuation\">]</span>\n\n    adv_root_ref <span class=\"token operator\">=</span> fetch_ref<span class=\"token punctuation\">(</span><span class=\"token string\">'adv-capacities'</span><span class=\"token punctuation\">)</span>\n    door_root_ref <span class=\"token operator\">=</span> fetch_ref<span class=\"token punctuation\">(</span><span class=\"token string\">'door-capacities'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> title <span class=\"token keyword\">in</span> titles<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 当日予約の人数     </span>\n        door_capacities <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'10:30'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'11:00'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'11:30'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'12:00'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'12:30'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'13:00'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'13:30'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'14:00'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'14:30'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'15:00'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'15:30'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'16:00'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token comment\"># 事前予約の人数を取得</span>\n        adv_ref <span class=\"token operator\">=</span> adv_root_ref<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span>\n        adv_capacities <span class=\"token operator\">=</span> adv_ref<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token comment\"># 午前の3つを除き, 当日予約枠に追加</span>\n        <span class=\"token keyword\">for</span> schedule <span class=\"token keyword\">in</span> schedules<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            door_capacities<span class=\"token punctuation\">[</span>schedule<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> adv_capacities<span class=\"token punctuation\">[</span>schedule<span class=\"token punctuation\">]</span>\n\n        <span class=\"token comment\"># Firestoreに追加</span>\n        door_ref <span class=\"token operator\">=</span> door_root_ref<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span>\n        door_ref<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>door_capacities<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>終了したコースを締め切る</h2>\n<p>　過ぎた時間帯の当日予約枠を締め切る必要があったため、こちらも。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 終了したコースを締め切る</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">clear_capacities</span><span class=\"token punctuation\">(</span>schedule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    titles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'スライム'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DNAストラップ'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'くるくるマグネット'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ふしぎな水そう'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'球体ロボットでプログラミング体験'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'電卓を分解して自分だけのアクセサリーを作ろう'</span><span class=\"token punctuation\">]</span>\n\n    root_ref <span class=\"token operator\">=</span> fetch_ref<span class=\"token punctuation\">(</span><span class=\"token string\">'door-capacities'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> title <span class=\"token keyword\">in</span> titles<span class=\"token punctuation\">:</span>\n        capacities_ref <span class=\"token operator\">=</span> root_ref<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 選択した時間帯の人数を0にする </span>\n        capacities <span class=\"token operator\">=</span> capacities_ref<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        capacities<span class=\"token punctuation\">[</span>schedule<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n        capacities_ref<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>capacities<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 12:00 の募集を締め切る</span>\n    clear_capacities<span class=\"token punctuation\">(</span><span class=\"token string\">'12:00'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>集計とか締め切りとかいろいろ自動化しなかった理由</h2>\n<p>　時間になったら自動で更新する形にしてもよかったのですが、当日予約等イレギュラーな対応が必要になる気がしたので今回は事前にスクリプトだけ作って半自動で更新する形を取っていました。更新した際に一度目を通したかったので、今回はこれで正解だった気がします。</p>\n<h2>反省</h2>\n<p>　webサービスと呼ぶにはなかなか設計が緩い上に経験が圧倒的に不足していたので、また時間見つけて勉強します。</p>","frontmatter":{"title":"アミュ前イベントの申込フォーム解説","date":"2023/03/10","category":"忘備録","isPublic":false},"fields":{"slug":"/10/"}},"previous":{"fields":{"slug":"/09/"},"frontmatter":{"title":"ReactでOGPを設定"}},"next":{"fields":{"slug":"/11/"},"frontmatter":{"title":"procon33競技部門のサンプル音源をつくりたい"}}},"pageContext":{"id":"dfac8bad-9092-566d-afb6-49cbc238af7e","previousPostId":"e1f664f9-d73c-54e6-adc8-825ea7f01ff0","nextPostId":"0a824a39-4eee-51a6-9fcc-b81c92f60a07"}},"staticQueryHashes":["1324386404"],"slicesMap":{}}