{"componentChunkName":"component---src-templates-blog-post-js","path":"/01/","result":{"data":{"site":{"siteMetadata":{"title":"アーカイブ"}},"markdownRemark":{"id":"0f801cf9-1570-5efc-b057-393986fc8887","excerpt":"Unicodeコードポイントから文字を生成する方法は言語や環境によって異なります。 これらのメソッドに相当するものがC++でみつからなかったので、適当に調べて実装しました。\nコードポイントの桁数に合わせてビット演算し、ワイド文字にキャストして生成します。 これだと文字化けしました。私のPCはWindows…","html":"<p>Unicodeコードポイントから文字を生成する方法は言語や環境によって異なります。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Python3</span>\ncode_point <span class=\"token operator\">=</span> <span class=\"token number\">0x1F642</span>\nemoji <span class=\"token operator\">=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>code_point<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>emoji<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 🙂</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// Java</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token keyword\">int</span> codePoint <span class=\"token operator\">=</span> <span class=\"token number\">0x1F604</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> emoji <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Character</span><span class=\"token punctuation\">.</span><span class=\"token function\">toChars</span><span class=\"token punctuation\">(</span>codePoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>emoji<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 😄</span>\n    <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// JavaScript</span>\n<span class=\"token keyword\">const</span> codePoint <span class=\"token operator\">=</span> <span class=\"token number\">0x1F606</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> emoji <span class=\"token operator\">=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCodePoint</span><span class=\"token punctuation\">(</span>codePoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>emoji<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 😆</span></code></pre></div>\n<p>これらのメソッドに相当するものがC++でみつからなかったので、適当に調べて実装しました。\nコードポイントの桁数に合わせてビット演算し、ワイド文字にキャストして生成します。</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n\nstd<span class=\"token double-colon punctuation\">::</span>wstring <span class=\"token function\">to_utf8</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> code_point<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">wstring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span>code_point\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x800</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">wstring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">6</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x1C0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&lt;</span> <span class=\"token number\">0xD800</span> <span class=\"token operator\">||</span>\n        <span class=\"token punctuation\">(</span><span class=\"token number\">0xDFFF</span> <span class=\"token operator\">&lt;</span> code_point <span class=\"token operator\">&amp;&amp;</span> code_point <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">wstring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">12</span> <span class=\"token operator\">|</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">6</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x110000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">wstring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">18</span> <span class=\"token operator\">|</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">12</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">6</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">wstring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token number\">0xEF</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token number\">0xBF</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token number\">0xBD</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> code_point <span class=\"token operator\">=</span> <span class=\"token number\">0x3042</span><span class=\"token punctuation\">;</span>\n    std<span class=\"token double-colon punctuation\">::</span>wcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">to_utf8</span><span class=\"token punctuation\">(</span>code_point<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>これだと文字化けしました。私のPCはWindowsなので、<code class=\"language-text\">SetConsoleOutputCP()</code> でコンソールの出力コードを設定してやります。</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h></span></span>\n\nstd<span class=\"token double-colon punctuation\">::</span>wstring <span class=\"token function\">to_utf8</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> code_point<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">wstring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span>code_point\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x800</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">wstring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">6</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x1C0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&lt;</span> <span class=\"token number\">0xD800</span> <span class=\"token operator\">||</span>\n        <span class=\"token punctuation\">(</span><span class=\"token number\">0xDFFF</span> <span class=\"token operator\">&lt;</span> code_point <span class=\"token operator\">&amp;&amp;</span> code_point <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">wstring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">12</span> <span class=\"token operator\">|</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">6</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x110000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">wstring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">18</span> <span class=\"token operator\">|</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">12</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">>></span> <span class=\"token number\">6</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>code_point <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">wstring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token number\">0xEF</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token number\">0xBF</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token number\">0xBD</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// 出力コードを設定</span>\n    <span class=\"token function\">SetConsoleOutputCP</span><span class=\"token punctuation\">(</span>CP_UTF8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> code_point <span class=\"token operator\">=</span> <span class=\"token number\">0x1F60C</span><span class=\"token punctuation\">;</span>\n    std<span class=\"token double-colon punctuation\">::</span>wcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">to_utf8</span><span class=\"token punctuation\">(</span>code_point<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ただしく😌が表示されました。</p>","frontmatter":{"title":"C++でUnicodeコードポイントから文字を生成","date":"2022/04/18","category":"忘備録","isPublic":true},"fields":{"slug":"/01/"}},"previous":null,"next":{"fields":{"slug":"/02/"},"frontmatter":{"title":"React AppをGitHub Pagesにデプロイする"}}},"pageContext":{"id":"0f801cf9-1570-5efc-b057-393986fc8887","previousPostId":null,"nextPostId":"e97dd4d1-4656-566a-91d6-dd8aef48dfeb"}},"staticQueryHashes":["1324386404"],"slicesMap":{}}