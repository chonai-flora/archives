{"componentChunkName":"component---src-templates-blog-post-js","path":"/11/","result":{"data":{"site":{"siteMetadata":{"title":"アーカイブ"}},"markdownRemark":{"id":"0a824a39-4eee-51a6-9fcc-b81c92f60a07","excerpt":"年度末なのであれこれ過去資料を整理していたら出てきたので資料用に残しておきます。 競技ルール 　募集要項 (https://www.procon.gr.jp/wp-content/uploads/2022/04/7cd7daa1edc6ad3c7077207f1814c2fc-1.pdf#page=…","html":"<p>　年度末なのであれこれ過去資料を整理していたら出てきたので資料用に残しておきます。</p>\n<h2>競技ルール</h2>\n<p>　募集要項 (<a href=\"https://www.procon.gr.jp/wp-content/uploads/2022/04/7cd7daa1edc6ad3c7077207f1814c2fc-1.pdf#page=9\">https://www.procon.gr.jp/wp-content/uploads/2022/04/7cd7daa1edc6ad3c7077207f1814c2fc-1.pdf#page=9</a>) に書かれています。読みデータの読みの開始位置をずらしたものが複数重ね合わせられたものが問題データとなっています。</p>\n<h2>おことわり</h2>\n<p>　この問題設定が、本当に運営が想定していたものと一致するのか、与えられた情報が表しているものであるのかには決定的な報告はないそうです。配布された問題サンプルに添付されている音源の形式をもとに作成したつもりですが、もしかしたら勘違いしたままだったりするのかもしれません(というかそもそも大した順位ではなかったので色々と微妙な可能性が高いです)。</p>\n<h2>スクリプト</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">import</span> pydub\n<span class=\"token keyword\">from</span> pydub <span class=\"token keyword\">import</span> AudioSegment\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">to_audio_segment</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> file_format<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AudioSegment <span class=\"token operator\">|</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        audio_segment <span class=\"token operator\">=</span> AudioSegment<span class=\"token punctuation\">.</span>from_file<span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span>file_format<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> audio_segment\n    <span class=\"token keyword\">except</span> FileNotFoundError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">slice_audio</span><span class=\"token punctuation\">(</span>audio<span class=\"token punctuation\">:</span> AudioSegment <span class=\"token operator\">|</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AudioSegment<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> audio <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> AudioSegment<span class=\"token punctuation\">.</span>empty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># [start, end) に切り出し</span>\n    <span class=\"token keyword\">return</span> audio<span class=\"token punctuation\">[</span>start<span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">:</span>end<span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">merge_audios</span><span class=\"token punctuation\">(</span>audios<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>AudioSegment<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AudioSegment<span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 先頭のデータに以降のデータを重ねる(AudioSegment.overlay())</span>\n    merged_audio <span class=\"token operator\">=</span> audios<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> audio <span class=\"token keyword\">in</span> audios<span class=\"token punctuation\">:</span>\n        merged_audio <span class=\"token operator\">=</span> merged_audio<span class=\"token punctuation\">.</span>overlay<span class=\"token punctuation\">(</span>audio<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> merged_audio\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 音源のメタデータ(json)</span>\n    questions_metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\"># 一度に複数個作成</span>\n    <span class=\"token keyword\">for</span> question_number <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 重ね合わせる個数</span>\n        audio_count <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 1~44のデータから重ね合わせる個数分無作為に選択</span>\n        audio_numbers <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> audio_count<span class=\"token punctuation\">)</span>\n\n        audio_segments <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> audio_number <span class=\"token keyword\">in</span> audio_numbers<span class=\"token punctuation\">:</span>\n            audio_segment <span class=\"token operator\">=</span> to_audio_segment<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'../JKspeech/J</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>audio_number<span class=\"token punctuation\">:</span><span class=\"token format-spec\">02</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">.wav'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wav'</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 開始位置・終了を適当に指定</span>\n            start <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n            end <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> start <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n            audio_segment <span class=\"token operator\">=</span> slice_audio<span class=\"token punctuation\">(</span>audio_segment<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n\n            audio_segments<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>audio_segment<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 作成したサンプルデータのエクスポート, メタデータの書き込み</span>\n        question_id <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'Q</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>question_number<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">03</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">_audio_numbera'</span></span>\n        merged_audio <span class=\"token operator\">=</span> merge_audios<span class=\"token punctuation\">(</span>audio_segments<span class=\"token punctuation\">)</span>\n        merged_audio<span class=\"token punctuation\">.</span>export<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'../questions_ja/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>question_id<span class=\"token punctuation\">}</span></span><span class=\"token string\">.wav'</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">'wav'</span><span class=\"token punctuation\">)</span>\n        questions_metadata<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>question_id<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'count'</span><span class=\"token punctuation\">:</span> audio_count<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'correct_numbers'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>audio_numbers<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../questions_ja/metadata.json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>questions_metadata<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Done\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>実行結果</h2>\n<p><audio src=\"https://drive.google.com/uc?id=1VS0oK8ttpfsAV3fbGKrZA9DJ6e1aeg9_\" controls></audio></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"Q001_ja\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"length\"</span><span class=\"token operator\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"correct_numbers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">25</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">34</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">42</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>これらを使って開発を進めていました。しかし、問題データの中で札を読み始める位置が変わるという風に勘違いしていたため最適なサンプルになりませんでした。切り出し位置とか余計にいじる必要なかったようです。</p>","frontmatter":{"title":"procon33競技部門のサンプル音源をつくりたい","date":"2023/03/12","category":"忘備録","isPublic":true},"fields":{"slug":"/11/"}},"previous":{"fields":{"slug":"/10/"},"frontmatter":{"title":"アミュ前イベントの申込フォーム解説"}},"next":{"fields":{"slug":"/12/"},"frontmatter":{"title":"クリスマス抽選ソフトのつくり方"}}},"pageContext":{"id":"0a824a39-4eee-51a6-9fcc-b81c92f60a07","previousPostId":"dfac8bad-9092-566d-afb6-49cbc238af7e","nextPostId":"89a7bc9e-0011-56e8-ae29-3790145397e9"}},"staticQueryHashes":["1324386404"],"slicesMap":{}}